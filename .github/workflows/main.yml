name: Build and Deploy to Server

on:
  push:
    branches:
      - master  # O la rama que quieras usar

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'  # Cambia según la versión que utilices

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet publish -c Release -o ./publish --no-restore

    - name: Compress the content of the publish folder
      run: tar -czf publish.tar.gz -C publish .  # Comprime solo el contenido de la carpeta publish

    - name: Copy the compressed file via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: ./publish.tar.gz  # Copia el archivo comprimido
        target: /var/www/HFPMApi/  # Ruta donde se va a copiar el archivo comprimido

    - name: Extract files on the server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          tar -xzf /var/www/HFPMApi/publish.tar.gz -C /var/www/HFPMApi/  # Descomprime los archivos en el destino
          rm /var/www/HFPMApi/publish.tar.gz  # Elimina el archivo comprimido después de extraer

    - name: Restart the service
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: sudo systemctl restart HFPMApi.service  # Nombre de tu servicio
